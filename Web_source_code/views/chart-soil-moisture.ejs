<%- include('includes/head.ejs') %>
    <link rel="stylesheet" type="text/css" href="/css/style.css">
</head>
<body>
  <%- include('includes/navigation.ejs') %>
  <style>
    body{
      background-color: rgb(241, 242, 246);
      gap: 10px;
    }
  </style>
  <body >
    <style>
      body {
        margin: 0;
        align-items: center;
        text-align: center;
      }
      .container{
        min-height: 100%; 
        max-height: 100%;
      }
      .soil-form{
        display: flex;
        gap:50px

      }
      .data{
        min-height: 100%; 
        max-height: 100%;
        background-color: lightgray;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
        text-align: center;
        
        padding: 10px;
        margin-right: 0;
        max-width: 1100px;
        align-items: center;
        display: flex;
        flex-direction: column;
      }
      @media (max-width: 40em) {
        .data{
          width: 100;
        }
        .data_i {
          display: block;
          justify-items: center;
          flex-direction: column;
          flex: 0 0 100%;
          padding: 20px;
        }
        .data-label{
          font-size: 15px;
        }
        .data-labelx{
          font-size: 17px;
        }
        .zzz{
          font-size: 20px;
        }
        .data-item{
          width: 100%;
        }
        .soil-form{
          width: 100%;
        }
      }
    </style>
    <div class="data" style="max-height: 100% ; max-width: 100%;">
      <div class="data-item"style="background-color:  #2f1e1e9c; display: flex;width: 70%; margin-top: 10px; padding: 10px;
        border-radius: 5px; border: 1px solid #ccc;">
        <div class="icon-big icon-danger text-center" style="width: 100%; height: 70% ;justify-content: center; align-items: center;">
            <img src="/image/11231980.png" style="width: 125px; padding-top: 10px; color: rgb(81, 27, 27)">
        </div>
        
        <div style="width: 100%">
            <p class="data-label" style="font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; justify-content: center; align-items: center; padding-top: 25px;">Average soil moisture over the past hour</p>
            <p class="data-value" style="padding-top: 10px;"><span id="soil" style="padding-top: 40px; color: rgb(46, 13, 13);"><%= average_soil_moisture %> %</span></p>
        </div>
      </div>
      <div class="data_i" style="max-height: 100% ; max-width: 100%;display: flex; justify-content: space-between; width: 100%; gap: 10px;margin: 10px; margin-top: 0px;">
        <div class="container" style="margin-top: 10px;">
          <div class="card-header" style="font-weight: bold;  color: rgb(49, 4, 4) ;margin-top: 20px; margin-bottom: 20px; font-size: 30px;
          "> <p class="zzz"> Soil moisture realtime chart </p></div>
              <canvas id="myChart" style="max-width: 100%; max-height: 100%;">
              </canvas>
        </div>
        <div class="container" style="margin-top: 10px;">
          <div class="card-header" style="font-weight: bold;  color: rgb(49, 4, 4) ;
          margin-top: 20px; margin-bottom: 20px; font-size: 30px;
          "> <p class="zzz">Soil moisture chart for 1 hour</p> </div>
          <canvas id="myChart_x" style="max-width: 100%; max-height: 100%;">
          </canvas>
        </div>
      </div>
      <div class="data-item"style="background-color:  #2f1e1e9c; display: flex;width: 300px; margin-top: 10px; padding: 10px;
      border-radius: 5px; border: 1px solid #ccc;"> 
        <p class="data-labelx" style="font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; justify-content: center; align-items: center;">Automated Soil Mode</p>
        <div style="margin-left: 10px;">
          <input class="mode-button" type="checkbox" data-toggle="toggle" data-onstyle="success" data-width="100" data-height="50">
        </div>
      </div>
      <div class="data-item" id="data-item-form" style="background-color: white; display: flex;width: 90%; margin-top: 10px;
      border-style: solid;
      border-width: 4px;
      border-color: rgb(49, 4, 4);
      border-radius: 7px;
      padding-left: 20px;
      padding: 5px;
      ">
        <form class="soil-form" action="/chart-soil-moisture" method="POST"
        style="display: flex; gap: 2em;">
          <div class="soil-form">
            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
            <div class="time-input-container" style="padding: 10px;
            max-width: 100%;;"
            >
              <div style="margin-bottom: 10px;">
                <label for="Intervals">The maximum allowable soil moisture: </label>
                <input style="padding: 7px; max-width: 100px;
                margin-left: 25px;
                border-width: 4px;
                border-color: green;
                border-radius: 7px;
                padding-left: 20px;
                " type="text" name="max" id="max" placeholder="<%= max_soil_moisture %>">
                <label style="margin-left: 20px;" for="Intervals">%</label>
              </div>
              <div style="margin-bottom: 10px;">
                <label for="Intervals">The minimum allowable soil moisture: </label>
                <input style="padding: 7px; max-width: 100px;
                margin-left: 25px;
                border-width: 4px;
                border-color: green;
                border-radius: 7px;
                padding-left: 20px;
                " type="text" name="min" id="min" placeholder="<%= min_soil_moisture %>"> 
                <label style="margin-left: 20px;" for="Intervals">%</label>
              </div>
              <div>
                <button type="submit" class="btn btn-success" id="moblie" style="max-height: 100%;">Update</button>
              </div>
          </div>
          </div>
        </form>

      </div>
    </div>
  </body>
  <footer>
    <script>
      // JavaScript to programmatically set the state to 'off'
      $(document).ready(function() {
        if('<%= JSON.stringify(soil_auto_mode)%>' == "false"){
          $('input[type="checkbox"]').bootstrapToggle('off');
        }
        else{
          $('input[type="checkbox"]').bootstrapToggle('on');
        }
      });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js"></script>
    <script>
      ctx = document.getElementById('myChart').getContext("2d");
      let gradient = ctx.createLinearGradient(0,0,0,50);
      
      gradient.addColorStop(0, 'rgb(49, 4, 4,0.4)');
      var data = {
        labels : [0],
        datasets: [
          {
            label:"Soil moisture",
            data: ['<%= JSON.stringify(soil_moisture)%>'],
            borderColor:'rgb(221, 240, 53)',
            lineTension:0.5,
            fill:true,
            backgroundColor:gradient,
            borderColor:"rgb(49, 4, 4)"
          }
        ]
      }
      const config = {
        type:'line',
        data: data ,
        options:{
          responsive: true,
          scales:{
            y:{
              ticks:{
                callback: function(value){
                  return value + ' %';
                }
              }
            }
          }
        }

      }
      var mychart = new Chart(
        document.getElementById('myChart')
        ,config
      )
      const firebaseConfig = {
          apiKey: "AIzaSyCOYDfXX2g7eQ2q35H1AhrCrC9s_MedTIo",
          authDomain: "tkll-project-402e9.firebaseapp.com",
          databaseURL: "https://tkll-project-402e9-default-rtdb.firebaseio.com",
          projectId: "tkll-project-402e9",
          storageBucket: "tkll-project-402e9.appspot.com",
          messagingSenderId: "440382764725",
          appId: "1:440382764725:web:36a2190a7d05f9bf8bb0fc",
          measurementId: "G-QSDYXY6YP0"
      };
  
      // Khởi tạo Firebase
      firebase.initializeApp(firebaseConfig);
  
      // Sử dụng Firebase Firestore
      var db = firebase.firestore();

      let isProcessing = false;

      const interval1 = setInterval(async () => {
          if ('<%= JSON.stringify(isAuthenticated) %>' == "true" && !isProcessing) {
              isProcessing = true;
              try {
                  data_z = await db.collection("User").doc("data").get()
                  warning = data_z.data()["warning"]
                  
                  if (warning) {
                      await Swal.fire({
                          title: "Warning",
                          text: "Someone wants to break in !!!",
                          icon: "warning",
                          confirmButtonColor: "#d33"
                      });

                      await db.collection("User").doc("data").update({
                          warning: false
                      });
                  }
              } catch (error) {
                  console.error("Error:", error);
              } finally {
                  isProcessing = false;
              }
          }
      }, 1000);
      var mode_button = $(".mode-button");
      mode_button.change(function() {
          var isChecked = $(this).prop('checked');

          // Assuming you are using Firebase Firestore
          db.collection("User").doc("data").update({
              soil_auto_mode: isChecked
          });
          if (isChecked) {
                $("#data-item-form").show();
            } else {
                $("#data-item-form").hide();
          }
      });

      window.setInterval(mycallback, 2000);
      function mycallback(){
        var now = new Date()
        now = now.getHours() + ":" +now.getMinutes() + ":" + now.getSeconds()
        
        data.labels.push(now)
        var dataRef = db.collection("User").doc("data");
        dataRef.get().then(function(doc) {
        if (doc.exists) {
          // Tài liệu tồn tại, bạn có thể lấy giá trị trường "temp" bằng cách sử dụng doc.data()
          var soilValue = doc.data().Soil;
          data.datasets[0].data.push(soilValue)
        } else {
          console.log("Tài liệu không tồn tại");
        }
        }).catch(function(error) {
          console.error("Lỗi khi truy cập dữ liệu: ", error);
        });
        mychart.update()
      }
      labels = Array.from({ length: 60 }, (_, index) => index + 1);
      const data_x = {
        labels: labels,
        datasets: [{
          label: 'Soil moisture',
          data: JSON.parse('<%= JSON.stringify(list_soil_moisture) %>'),
          backgroundColor: 
            'rgb(49, 4, 4, 0.3)',
          borderColor: 
            'rgb(49, 4, 4)',
             borderWidth: 1
        }]
      }
      const config_x = {
        type: 'bar',
        data: data_x,
        options: {
          scales: {
            y: {
              beginAtZero: true,
              ticks:{
                callback: function(value){
                  return value + ' %';
                }
              }
            }
          }
        },
      };
      var mychart_x = new Chart(
        document.getElementById('myChart_x')
        ,config_x
      )
    </script>
  </footer>

<%- include('includes/end.ejs') %>